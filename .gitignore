# Veja https://help.github.com/articles/ignoring-files/ para mais sobre ignorar arquivos.

# === Dependências ===
# Ignora node_modules em qualquer nível (raiz, apps/*, packages/*)
node_modules/

# Ignora o store do pnpm se por acaso for criado dentro do projeto (geralmente fica fora)
.pnpm-store/

# === Arquivos de Build e Saída ===
# Saída de compilação comum (TypeScript, etc.)
dist/
build/

# Saída específica do Next.js
.next/
out/

# Saída específica de pacotes (redundante se os acima funcionarem, mas explícito)
apps/*/.next/
apps/*/out/
apps/*/dist/
packages/*/dist/

# === Logs ===
logs
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*
lerna-debug.log*

# === Variáveis de Ambiente ===
# Ignora todos os arquivos .env, exceto o de exemplo
.env
.env.*
!.env.example
!.env.ci # Muitas vezes commita-se o .env.ci para pipelines

# === Arquivos de Runtime ===
pids
*.pid
*.seed
*.pid.lock

# === Cobertura de Testes ===
lib-cov
coverage
*.lcov
.nyc_output

# === Arquivos de Ferramentas de Build ===
.grunt

# === Dependências de Bower (se usado) ===
bower_components

# === Configuração node-waf ===
.lock-wscript

# === Addons Nativos Compilados ===
# (Ex: build do bcrypt, etc.)
build/Release

# === Diretórios e Arquivos de IDE ===
.idea
.vscode/*
# Não ignore configurações úteis do VSCode se compartilhadas pela equipe
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.sublime-project
*.sublime-workspace

# === Arquivos Opcionais do Terraform ===
terraform.tfstate*

# === Arquivos de Sistema Operacional ===
.DS_Store
Thumbs.db

# === Opcional: Arquivos de outros gerenciadores (caso misture, improvável) ===
# package-lock.json
# yarn.lock
# .yarn/cache
# .yarn/unplugged
# .yarn/build-state.yml
# .yarn/install-state.gz
# .pnp.*

#Docker
Dockerfile
docker-compose*.yml
entrypoint.sh
.dockerignore
followup-stak.yml
