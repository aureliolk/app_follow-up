// todo

# Refatoração WhatsApp Templates TODO

- [ ] Mover o componente `WhatsappTemplateDialog` de `app/workspace/[slug]/conversations/components/` para `components/whatsapp/`
- [ ] Atualizar a importação do `WhatsappTemplateDialog` em `app/workspace/[slug]/conversations/components/ConversationInputArea.tsx`
- [ ] Mover/Definir o tipo `WhatsappTemplate` em `lib/types/whatsapp.ts` (ou `lib/types/index.ts`)
- [ ] Atualizar importações do tipo `WhatsappTemplate` em `components/whatsapp/WhatsappTemplateDialog.tsx` e onde mais for usado
- [ ] Criar/Definir a Server Action `sendWhatsappTemplateAction` em `lib/actions/whatsappActions.ts` (se `lib/actions` não existir, criar)
- [ ] Implementar a lógica na `sendWhatsappTemplateAction` (buscar credenciais, formatar payload, chamar API WhatsApp, opcionalmente criar mensagem no DB com status PENDING/SENT)
- [ ] Refatorar a função `sendTemplateMessage` no `ConversationContext` para chamar a `sendWhatsappTemplateAction`, passando os dados necessários (incluindo `clientId` se necessário para a action)
- [ ] Garantir que `ConversationDetail.tsx` passe todos os dados necessários (como `clientId`) para a função `sendTemplateMessage` do contexto.
- [ ] Testar o fluxo completo de seleção e envio de templates na área de conversas original.
- [ ] Identificar e refatorar outras áreas do app que precisarão usar o `WhatsappTemplateDialog` e a `sendWhatsappTemplateAction`.

